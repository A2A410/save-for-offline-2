name: Build & Auto-Release on Merge

on:
  push:
    branches:
      - master
  pull_request:
    types: [closed]
    branches:
      - master
  workflow_dispatch:

jobs:
  build-release:
    if: github.event_name == 'push' || 
        github.event_name == 'workflow_dispatch' || 
        (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Extract version from build.gradle
        id: version
        run: |
          VERSION_NAME=$(grep -m1 'versionName' app/build.gradle | sed 's/[^0-9\.]*//g')
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT

      - name: Check existing tags and increment if needed
        id: check_tag
        run: |
          BASE_TAG="v${{ steps.version.outputs.version_name }}"
          if git ls-remote --tags origin | grep -q "refs/tags/${BASE_TAG}$"; then
            echo "Base tag ${BASE_TAG} exists. Incrementing..."
            LAST_TAG=$(git ls-remote --tags origin | grep "refs/tags/v" | awk -F'/' '{print $3}' | sort -V | tail -1)
            LAST_VER=${LAST_TAG#v}
            IFS='.' read -r MAJOR MINOR PATCH <<< "$LAST_VER"
            PATCH=$((PATCH+1))
            NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
            echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          else
            echo "new_tag=${BASE_TAG}" >> $GITHUB_OUTPUT
          fi

      - name: Update versionName in build.gradle
        if: steps.check_tag.outputs.new_tag != ''
        run: |
          NEW_VERSION=$(echo "${{ steps.check_tag.outputs.new_tag }}" | sed 's/^v//')
          sed -i "s/versionName \".*\"/versionName \"$NEW_VERSION\"/" app/build.gradle
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add app/build.gradle
          git commit -m "Bump versionName to $NEW_VERSION [skip ci]" || echo "No changes to commit"
          git push origin HEAD:${GITHUB_REF#refs/heads/}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.check_tag.outputs.new_tag }}
          name: "Release ${{ steps.check_tag.outputs.new_tag }}"
          draft: false
          prerelease: false
          files: app/build/outputs/**/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
